<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
  xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
  default-autowire="byName">

 
  <!-- SHARED CONFIG -->
  <tx:annotation-driven />
  
   <bean id="migrationConfigResource" class="org.springframework.core.io.ClassPathResource">
      <constructor-arg index="0" value="migration/migration-config.json" />
   </bean>

  <bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="file:${sli.conf}" />
  </bean>

   <!-- MONGODB CONFIG -->
   <mongo:mongo id="sliMongo" replica-set="${sli.mongodb.host}">
      <mongo:options connections-per-host="${sli.mongodb.connections}" auto-connect-retry="true" socket-timeout="600000" socket-keep-alive="true" slave-ok="false"/>
   </mongo:mongo>

  <bean id="sliMongoDbFactory" class="org.slc.sli.dal.repository.connection.TenantAwareMongoDbFactory">
    <constructor-arg ref="sliMongo" />
    <constructor-arg value="${sli.mongodb.database}" />
  </bean>

  <mongo:mapping-converter id="mappingConverter" base-package="org.slc.sli" db-factory-ref="sliMongoDbFactory">
    <mongo:custom-converters>
      <mongo:converter>
        <bean class="org.slc.sli.dal.convert.EntityReadConverter" />
      </mongo:converter>
      <mongo:converter>
        <bean class="org.slc.sli.dal.convert.EntityWriteConverter" />
      </mongo:converter>
    </mongo:custom-converters>
  </mongo:mapping-converter>

  <!-- DB TO LOG API PERF CONFIG -->
  <mongo:mongo id="perfApiMongo" host="${sli.perf.mongodb.host}" port="${sli.perf.mongodb.port}">
    <mongo:options connections-per-host="${sli.mongodb.connections}" auto-connect-retry="true"
      socket-timeout="600000" socket-keep-alive="true"  slave-ok="false"/>
  </mongo:mongo>

  <mongo:db-factory id="mongoPerfDbFactory" dbname="${sli.perf.mongodb.database}" mongo-ref="perfApiMongo" />
  <!-- username="${sli.mongodb.user}" password="${sli.mongodb.pass}" /> -->

  <mongo:mapping-converter id="mappingPerfDbConverter" base-package="org.slc.sli"
    db-factory-ref="mongoPerfDbFactory">
    <mongo:custom-converters>
      <mongo:converter>
        <bean class="org.slc.sli.dal.convert.EntityReadConverter" />
      </mongo:converter>
      <mongo:converter>
        <bean class="org.slc.sli.dal.convert.EntityWriteConverter" />
      </mongo:converter>
    </mongo:custom-converters>
  </mongo:mapping-converter>

  <bean id="entityEncryption" class="org.slc.sli.dal.encrypt.EntityEncryption" />
  <bean id="dalEntityCipher" class="org.slc.sli.dal.encrypt.AesCipher">
  </bean>

  <bean id="mongoTemplate" class="org.slc.sli.dal.template.MongoEntityTemplate" depends-on="mongoTrackingAspect">
    <constructor-arg ref="sliMongoDbFactory" />
    <constructor-arg ref="mappingConverter" />
    <!-- property name="slaveOk" value="false" / -->
    <!-- <property name="writeConcern"> <util:constant static-field="com.mongodb.WriteConcern.SAFE"></util:constant> </property> -->
  </bean>

  <bean id="mongoPerfDbTemplate" class="org.springframework.data.mongodb.core.MongoTemplate" depends-on="mongoTrackingAspect">
    <constructor-arg ref="mongoPerfDbFactory" />
    <constructor-arg ref="mappingPerfDbConverter" />
    <!-- property name="slaveOk" value="false" / -->
  </bean>

  <bean id="journalTemplate" class="org.springframework.data.mongodb.core.MongoTemplate" depends-on="mongoTrackingAspect">
    <constructor-arg ref="sliMongoDbFactory" />
    <property name="writeConcern"> <util:constant static-field="com.mongodb.WriteConcern.NORMAL"></util:constant> </property>
  </bean>

  <bean id="mongoIdConverter" class="org.slc.sli.dal.convert.MongoIdConverter" />

  <bean id="mongoTrackingAspect" class="org.slc.sli.dal.aspect.MongoTrackingAspect" factory-method="aspectOf">
  </bean>

  <alias alias="securityRepo" name="validationRepo" />
  <bean id="entityKeyEncoder" class="org.slc.sli.dal.repository.EntityKeyEncoder" />

  <bean id="sliSchemaVersionValidator" class="org.slc.sli.dal.versioning.SliSchemaVersionValidator" >
    <property name="mongoTemplate" ref="mongoTemplate" />
  </bean>

  <bean id="mongoEntityRepository" name="validationRepo" class="org.slc.sli.dal.repository.MongoEntityRepository">
    <property name="template" ref="mongoTemplate" />
    <property name="idConverter" ref="mongoIdConverter" />
    <property name="tenantAgnosticCollections" ref="tenantAgnosticCollections" />
  </bean>
  <bean id="simpleEntityRepository" name="simpleValidationRepo" class="org.slc.sli.dal.repository.SimpleEntityRepository">
  </bean>
  <bean id="mongoPerfEntityRepository" name="performanceRepo" class="org.slc.sli.dal.repository.MongoPerfRepository">
    <property name="perfDbtemplate" ref="mongoPerfDbTemplate" />
    <property name="idConverter" ref="mongoIdConverter" />
  </bean>
  <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
    <property name="scopes">
      <map>
        <entry key="thread">
          <bean class="org.slc.sli.common.util.scope.CustomThreadScope" />
        </entry>
      </map>
    </property>
  </bean>

  <bean id="migrationRunner" class="org.slc.sli.dal.migration.config.MigrationRunner" factory-method="aspectOf">
    <property name="sliSchemaVersionValidator" ref="sliSchemaVersionValidator" />
    <property name="repository" ref="mongoEntityRepository" />
  </bean>

  <import resource="classpath:/spring/validation.xml" />
  <context:component-scan base-package="org.slc.sli.dal" />
  
  <bean id="searchTemplate" class = "org.springframework.web.client.RestTemplate">
<!-- 	  <constructor-arg> -->
<!-- 	    <bean class="org.springframework.http.client.CommonsClientHttpRequestFactory"> -->
<!-- 		    <property name="readTimeout" value="${search.service.timeout:3000}" /> -->
<!-- 	    </bean> -->
<!-- 	  </constructor-arg> -->
  </bean>

   <bean id="encryptor" class="org.slc.sli.encryption.tool.Encryptor">
      <constructor-arg name="keyStoreLocation" value="${sli.encryption.keyStore}" />
      <constructor-arg name="keyStorePassword" value="${sli.encryption.keyStorePass}" />
   </bean>
  
  <bean id="searchRepository" name="searchRepo" class="org.slc.sli.dal.repository.ElasticSearchRepository" init-method="init" destroy-method="destroy">
    <property name="searchTemplate" ref="searchTemplate" />
    <property name="searchUrl" value="${sli.search.url}" />
    <property name="encryptor" ref="encryptor" />
    <property name="dalKeyAlias" value="${sli.encryption.dalKeyAlias}" />
    <property name="keyStorePass" value="${sli.encryption.keyStorePass}" />
    <property name="searchUsername" value="${sli.search.username}" />
    <property name="searchPassword" value="${sli.search.password}" />
    <property name="enableEncryption" value="${sli.search.encryption:true}" />
  </bean>

  <util:set id="tenantAgnosticCollections" value-type="java.lang.String">
    <value>tenant</value>
    <value>securityEvent</value>
    <value>realm</value>
    <value>application</value>
    <value>roles</value>
    <value>tenantJobLock</value>
    <value>userSession</value>
    <value>userAccount</value>
    <value>bulkExtractFiles</value>
  </util:set>

</beans>
